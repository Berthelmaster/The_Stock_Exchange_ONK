// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserStocksBroker.Data;

namespace UserStocksBroker.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UserStocksBroker.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<double>("FullPrice")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Stock");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullPrice = 1.1000000000000001,
                            Name = "flow",
                            Price = 1.0,
                            Quantity = 1,
                            TimeStamp = new DateTime(2020, 5, 21, 12, 36, 20, 606, DateTimeKind.Local).AddTicks(3638),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            FullPrice = 1.1000000000000001,
                            Name = "flow",
                            Price = 1.0,
                            Quantity = 1,
                            TimeStamp = new DateTime(2020, 5, 21, 12, 36, 20, 610, DateTimeKind.Local).AddTicks(9986),
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            FullPrice = 1.1000000000000001,
                            Name = "flow",
                            Price = 1.0,
                            Quantity = 1,
                            TimeStamp = new DateTime(2020, 5, 21, 12, 36, 20, 611, DateTimeKind.Local).AddTicks(106),
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            FullPrice = 1.1000000000000001,
                            Name = "flow",
                            Price = 1.0,
                            Quantity = 1,
                            TimeStamp = new DateTime(2020, 5, 21, 12, 36, 20, 611, DateTimeKind.Local).AddTicks(115),
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            FullPrice = 1.1000000000000001,
                            Name = "flow",
                            Price = 1.0,
                            Quantity = 1,
                            TimeStamp = new DateTime(2020, 5, 21, 12, 36, 20, 611, DateTimeKind.Local).AddTicks(119),
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            FullPrice = 1.1000000000000001,
                            Name = "flow",
                            Price = 1.0,
                            Quantity = 1,
                            TimeStamp = new DateTime(2020, 5, 21, 12, 36, 20, 611, DateTimeKind.Local).AddTicks(122),
                            UserId = 2
                        },
                        new
                        {
                            Id = 7,
                            FullPrice = 1.1000000000000001,
                            Name = "flow",
                            Price = 1.0,
                            Quantity = 1,
                            TimeStamp = new DateTime(2020, 5, 21, 12, 36, 20, 611, DateTimeKind.Local).AddTicks(127),
                            UserId = 3
                        },
                        new
                        {
                            Id = 8,
                            FullPrice = 1.1000000000000001,
                            Name = "flow",
                            Price = 1.0,
                            Quantity = 1,
                            TimeStamp = new DateTime(2020, 5, 21, 12, 36, 20, 611, DateTimeKind.Local).AddTicks(131),
                            UserId = 3
                        },
                        new
                        {
                            Id = 9,
                            FullPrice = 1.1000000000000001,
                            Name = "flow",
                            Price = 1.0,
                            Quantity = 1,
                            TimeStamp = new DateTime(2020, 5, 21, 12, 36, 20, 611, DateTimeKind.Local).AddTicks(191),
                            UserId = 3
                        });
                });

            modelBuilder.Entity("UserStocksBroker.Models.UserStockCollection", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1
                        },
                        new
                        {
                            Id = 2
                        },
                        new
                        {
                            Id = 3
                        });
                });

            modelBuilder.Entity("UserStocksBroker.Models.Stock", b =>
                {
                    b.HasOne("UserStocksBroker.Models.UserStockCollection", "UserStockCollection")
                        .WithMany("Stocks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
